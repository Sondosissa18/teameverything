{"version":3,"sources":["utils/api.js","store/MessageStore.js","store/ChatStore.js","store/Store.js","store/useStore.js","components/Errorpage.js","components/ConnectedRoute.js","components/ListOfUsers.js","components/Home.js","components/About.js","components/Contact.js","components/DeleteUser.js","components/UpdateUser.js","components/UploadImg.js","components/ProfileCard.js","components/Profile.js","components/Logout.js","components/RecView.js","components/CollegeSearch.js","components/Chat/ChatMessages.js","components/Chat/ThreadList.js","components/Chat/UserSelect.js","components/Chat/ChatInput.js","components/Chat/Chat.js","components/LoginForm.js","components/Register.js","components/Login.js","components/Restrictor.js","Nav.js","serviceWorker.js","index.js","images/onlinechat2.png","images/search.jpg","components/pic/Alienpic.jpg","images/onlinechat.JPG","images/eslogo.png"],"names":["getToken","localStorage","getItem","setToken","token","setItem","axiosInstance","axios","create","baseURL","process","timeout","interceptors","request","use","config","headers","Authorization","error","response","status","window","alert","logout","Promise","reject","data","this","post","console","get","file","FormData","append","result","picLocation","thread","to","patch","delete","MessageStore","rootStore","message","messages","push","api","login","catch","err","length","observable","action","computed","ChatStore","pollInterval","stopPolling","currentThread","_id","startPolling","text","postMessage","chatMessage","runInAction","_chats","getThread","chats","participants","getThreads","threads","_threads","threadSelect","userId","state","value","startThread","changeThread","pollForMessages","setInterval","clearInterval","slice","defaultUser","id","name","role","email","location","school","accessToken","displayName","about","ACCESS_ROLES","recruiter","student","other","storeInstance","messageStore","chatStore","fetchUserIfLoggedIn","likesCount","isLoading","getUser","handleAccessToken","log","user","registerUser","jwtDecode","exp","iat","Date","now","valueOf","uploadPic","updateUser","getUserList","userList","users","_userList","deleteUser","roleToCheck","checking","includes","toJS","map","item","label","apiInstance","storeContext","React","createContext","StoreProvider","children","Provider","store","useStore","useContext","Error","ErrorPage","style","color","fontSize","padding","background","src","pic","alt","width","height","marginTop","marginLeft","display","REDIRECT_TO","ConnectedRoute","isProtected","redirectIfAuthenticated","ComponentToRender","component","allowIf","rest","routeIsProtectedForSure","isEmpty","redirectTo","isLoggedIn","render","pathname","from","isAtLeast","renderedProps","defaultProps","observer","ListOfUsers","useEffect","fetchUserList","useObserver","className","key","Card","minHeight","margin","onError","e","target","Title","Home","Container","Row","Col","Image","thumbnail","Img","variant","search","Body","Text","Button","onlinechat2","About","class","Component","Contact","DeleteUser","handleDeleteUser","preventDefault","confirm","size","onClick","UpdateUser","useLocalStore","update","handleChange","handleSubmit","a","setError","onSubmit","flexWrap","border","paddingTop","borderColor","type","placeholder","autoFocus","required","onChange","wrap","overflow","borderRadius","paddingBottom","squared","UploadImg","selectedFile","updateSelectedFile","files","accept","theme","ProfileCard","Width","backgroundColor","Profile","Logout","history","useHistory","handleLogout","CollegeSearch","useState","setText","colleges","setColleges","useDebounce","debouncedText","source","CancelToken","cancelToken","then","getColleges","isCancel","cancel","country","alpha_two_code","web_pages","ChatMessage","createdAt","ChatMessages","ThreadList","threadName","UserSelect","selectRef","useRef","handleInputChange","val","replace","onlinechat","Header","ref","onInputChange","options","userListLabels","current","ChatInput","messageRef","sendMessage","Chat","fluid","LoginForm","password","updateEmail","updatePassword","pass","submitForm","htmlFor","marginRight","Register","updateRole","Form","Group","controlId","Label","Control","as","Login","Restrictor","auth","Nav","backgroundSize","logo","exact","path","RecView","Errorpage","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bb92a2b1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass API {\n  axiosInstance = null;\n\n  constructor() {\n    const axiosInstance = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      timeout: 30000,\n    });\n\n    axiosInstance.interceptors.request.use(\n      (config) => ({\n        ...config,\n        headers: {\n          ...config.headers,\n          Authorization: `Bearer ${getToken() || \"\"}`,\n        },\n      }),\n      (error) => {\n        if (401 === error.response.status) {\n          window.alert(\"Sorry, your session has expired. Please log back in.\");\n          this.logout();\n        }\n        Promise.reject(error);\n      }\n    );\n\n    axiosInstance.interceptors.response.use(\n      ({ data }) => data,\n      (error) => Promise.reject(error)\n    );\n\n    this.axiosInstance = axiosInstance;\n  }\n\n  async login(data) {\n    try {\n      return await this.axiosInstance.post(\"/auth/login\", data);\n    } catch (err) {\n      console.error(err);\n      window.alert(\"Invalid login , please try again\");\n      throw err;\n    }\n  }\n\n  async logout() {\n    try {\n      await this.axiosInstance.get(\"/auth/logout\");\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async registerUser(data) {\n    try {\n      return await this.axiosInstance.post(\"/auth/register\", data);\n    } catch (err) {\n      console.error(err);\n      window.alert(\"Invalid email and password, please try again\");\n      throw err;\n    }\n  }\n\n  async uploadPic(file) {\n    try {\n      const data = new FormData();\n      data.append(\"picture\", file);\n      const result = await this.axiosInstance.post(\"/user/upload-pic\", data);\n      return result.picLocation;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async getUser() {\n    try {\n      return await this.axiosInstance.get(\"/user/get-user\");\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async getThread(thread) {\n    try {\n      return await this.axiosInstance.get(`/chat/threads/${thread}`);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async getThreads() {\n    try {\n      return await this.axiosInstance.get(`/chat/threads`);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async startThread(to) {\n    try {\n      return await this.axiosInstance.post(`/chat/threads`, { to });\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async getUserList() {\n    try {\n      return await this.axiosInstance.get(`/user/list`);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async postMessage(data) {\n    try {\n      return await this.axiosInstance.post(\"/chat\", data);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async updateUser(data) {\n    try {\n      const result = await this.axiosInstance.patch(\"/user/update-User\", data);\n      return result;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async deleteUser() {\n    try {\n      return await this.axiosInstance.delete(\"/user\");\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n}\n\nconst TOKEN_KEY = \"auth:token\";\nexport function getToken() {\n  try {\n    const storedState = localStorage.getItem(TOKEN_KEY);\n    return storedState;\n  } catch {\n    return \"\";\n  }\n}\nexport function setToken(token) {\n  localStorage.setItem(TOKEN_KEY, `${token}`);\n}\nexport default new API();\n","import { observable, action, computed, runInAction } from \"mobx\";\n\nclass MessageStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable messages = [\"Team\", \"Everything\"];\n  @action postMessage(message) {\n    this.messages.push(message);\n  }\n\n  @computed get messageCount() {\n    return this.messages.length;\n  }\n\n  doSomethingCrazy() {\n    this.rootStore.api.login(null).catch((err) => console.error(err));\n  }\n}\n\nexport default MessageStore;\n","import { observable, action, computed, runInAction } from \"mobx\";\n\nexport default class ChatStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n  }\n\n  pollInterval = null;\n\n  @observable _chats = [];\n  @computed get messages() {\n    return this._chats.slice();\n  }\n\n  @observable _threads = [];\n  @computed get threads() {\n    return this._threads.slice();\n  }\n\n  @observable currentThread = \"\";\n  @action changeThread(thread) {\n    this.stopPolling();\n    this.currentThread = thread._id;\n    this.startPolling();\n  }\n\n  @action\n  async postMessage(text) {\n    try {\n      const { chatMessage } = await this.rootStore.api.postMessage({\n        text,\n        thread: this.currentThread,\n      });\n      runInAction(() => {\n        this._chats.push(chatMessage);\n      });\n    } catch (err) {\n      console.error(\"store.postMessage failed\", err);\n    }\n  }\n\n  @action\n  async pollForMessages() {\n    try {\n      if (!this.currentThread) {\n        return;\n      }\n      const { chats, participants } = await this.rootStore.api.getThread(this.currentThread);\n      runInAction(() => {\n        this._chats = chats;\n        this.participants = participants;\n      });\n    } catch (err) {\n      console.error(\"store.pollForMessages failed\", err);\n    }\n  }\n\n  @action\n  async getThreads() {\n    try {\n      const { threads } = await this.rootStore.api.getThreads();\n      runInAction(() => {\n        this._threads = threads;\n      });\n    } catch (err) {\n      console.error(\"store.getThreads failed\", err);\n    }\n  }\n\n  @action\n  async startThread(threadSelect) {\n    try {\n      const userId = threadSelect.state.value.value;\n      const { thread } = await this.rootStore.api.startThread(userId);\n      await this.getThreads();\n      this.changeThread(thread);\n    } catch (err) {\n      console.error(\"store.getThreads failed\", err);\n    }\n  }\n\n  startPolling() {\n    this.stopPolling();\n    this.pollForMessages();\n    this.pollInterval = setInterval(() => {\n      this.pollForMessages();\n    }, 3000);\n  }\n\n  stopPolling() {\n    if (this.pollInterval) {\n      clearInterval(this.pollInterval);\n    }\n  }\n\n  @computed get messageCount() {\n    return this._chats.length;\n  }\n}\n","import { observable, action, computed, runInAction, toJS, get } from \"mobx\";\nimport jwtDecode from \"jwt-decode\";\nimport apiInstance, { setToken, getToken } from \"../utils/api\";\nimport MessageStore from \"./MessageStore\";\nimport ChatStore from \"./ChatStore\";\nconst defaultUser = {\n  id: 0,\n  name: \"\",\n  role: \"\",\n  email: \"\",\n  location: \"\",\n  school: \"\",\n  accessToken: \"\",\n  picLocation: \"\",\n  displayName: \"\",\n  about: \"\",\n};\nconst ACCESS_ROLES = {\n  recruiter: [\"recruiter\"],\n  student: [\"recruiter\", \"student\"],\n  other: [\"recruiter\", \"student\", \"other\"],\n};\nclass Store {\n  constructor({ api }) {\n    this.api = api;\n    this.messageStore = new MessageStore(this);\n    this.chatStore = new ChatStore(this);\n    this.fetchUserIfLoggedIn();\n  }\n  @observable user = { ...defaultUser };\n  @observable isLoading = false;\n  @action updateCount() {\n    this.likesCount++;\n  }\n  @computed get isLoggedIn() {\n    return !!this.user.accessToken;\n  }\n  @action\n  async fetchUserIfLoggedIn() {\n    try {\n      runInAction(() => {\n        this.isLoading = true;\n      });\n      if (getToken()) {\n        await this.getUser();\n      }\n    } finally {\n      runInAction(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n  @action\n  async login(data) {\n    try {\n      const { accessToken } = await this.api.login(data);\n      if (!accessToken) {\n        return;\n      }\n      this.handleAccessToken(accessToken);\n      this.getUser();\n    } catch (err) {\n    \n      console.error(\"wrong password\", err);\n      console.log(err);\n    }\n  }\n  @action\n  async logout() {\n    try {\n      await this.api.logout().catch((err) => {});\n      runInAction(() => {\n        this.user = { ...defaultUser };\n      });\n      this.handleAccessToken(\"\");\n    } catch (err) {\n      console.error(\"store.logout failed\", err);\n    }\n  }\n  async registerUser(data) {\n    try {\n      const { accessToken } = await this.api.registerUser(data);\n      if (!accessToken) {\n        return;\n      }\n      this.handleAccessToken(accessToken);\n      this.getUser();\n    } catch (err) {\n      console.error(\"store.registerUser failed\", err);\n    }\n  }\n  handleAccessToken(accessToken) {\n    if (!accessToken) {\n      setToken(\"\");\n      return;\n    }\n    setToken(accessToken);\n    const { iat, exp, ...data } = jwtDecode(accessToken);\n    if (exp < Date.now().valueOf() / 1000) {\n      this.logout();\n    }\n  }\n  @action\n  async uploadPic(data) {\n    try {\n      const picLocation = await this.api.uploadPic(data);\n      runInAction(() => {\n        this.user.picLocation = picLocation;\n      });\n    } catch (err) {\n      console.error(\"store.uploadPic failed\", err);\n    }\n  }\n  @action\n  async getUser() {\n    try {\n      const user = await this.api.getUser();\n      if (!user) {\n        return;\n      }\n      runInAction(() => {\n        this.user = { ...defaultUser, ...user };\n      });\n    } catch (err) {\n      console.error(\"store.getUser failed\", err);\n    }\n  }\n  @action\n  async updateUser(data) {\n    try {\n      console.log(data);\n      const user = await this.api.updateUser(data);\n      runInAction(() => {\n        this.user = { ...this.user, ...user };\n      });\n    } catch (err) {\n      console.error(\"store.updateUser failed\", err);\n    }\n  }\n  @observable _userList = [];\n  @computed get userList() {\n    return toJS(this._userList);\n  }\n  @computed get userListLabels() {\n    return toJS(\n      this._userList.map((item) => ({\n        label: item.displayName,\n        value: item._id,\n      }))\n    );\n  }\n  @action\n  async fetchUserList() {\n    try {\n      const { users: userList } = await this.api.getUserList();\n      runInAction(() => {\n        this._userList = userList;\n      });\n    } catch (err) {\n      console.error(\"store.fetchUserList failed\", err);\n    }\n  }\n  async deleteUser() {\n    try {\n      await this.api.deleteUser();\n      await this.logout();\n    } catch (err) {\n      console.error(\"store.deleteUser failed\", err);\n    }\n  }\n\n  isAtLeast(roleToCheck = \"other\") {\n    const checking = ACCESS_ROLES[roleToCheck] || ACCESS_ROLES.other;\n    return checking.includes(this.user.role);\n  }\n}\nconst storeInstance = new Store({ api: apiInstance });\nwindow.storeInstance = storeInstance; //this is just for testing. Do not use in source code.\nexport default storeInstance;\n","import React from \"react\";\nimport store from \"./Store\";\n\nconst storeContext = React.createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  return <storeContext.Provider value={store}>{children}</storeContext.Provider>;\n};\nexport const useStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\n    throw new Error(\"useStore must be used within a StoreProvider.\");\n  }\n  return store;\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pic from \"./pic/Alienpic.jpg\";\nconst ErrorPage = ({ status = 404, message = \"Not Found\" }) => {\n  return (\n    <div>\n      <button>\n        <Link\n          to=\"/\"\n          style={{\n            color: \"purple\",\n            fontSize: \"30px\",\n            padding: \"2px\",\n            background: \"#af9631\",\n          }}\n        >\n          Click To Go Home\n        </Link>\n      </button>\n      <img\n        src={pic}\n        alt=\"notFound\"\n        width=\"1200px\"\n        height=\"700\"\n        style={{\n          padding: \"15px\",\n          marginTop: \"10px\",\n          marginLeft: \"60px\",\n          display: \"flex\",\n        }}\n      />\n      <h2>{`Area ${status} ${message}`}</h2>\n    </div>\n  );\n};\nexport default ErrorPage;\n","import React from \"react\";\nimport ProptTypes from \"prop-types\";\nimport { observer } from \"mobx-react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { useStore } from \"../store/useStore\";\nimport ErrorPage from \"./Errorpage\";\nconst REDIRECT_TO = {\n  student: \"home\",\n  recruiter: \"recview\",\n  other: \"home\",\n};\n/*\n * ConnectedRoute is a component that renders Routes for you\n * It uses the auth store in redux to determine if a route should be rendered\n * or redirected else where based on the auth status\n */\nfunction ConnectedRoute({\n  isProtected,\n  redirectIfAuthenticated,\n  component: ComponentToRender,\n  allowIf,\n  ...rest\n}) {\n  if (!ComponentToRender) {\n    throw new Error(\"ConnectedRoute MUST have a prop named 'component'\");\n  }\n\n  const store = useStore();\n  const routeIsProtectedForSure = isProtected || !isEmpty(allowIf);\n  const redirectTo = REDIRECT_TO[store.user.role] || REDIRECT_TO.other;\n\n  // I shouldnt be on this page if im logged in\n  if (redirectIfAuthenticated && store.isLoggedIn) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) => (\n          <Redirect\n            to={{\n              pathname: `/${redirectTo}`,\n              state: { from: location },\n            }}\n          />\n        )}\n      />\n    );\n  }\n\n  // if this route is protected and the user is logged in and they have permissions.. allow it\n  if (routeIsProtectedForSure && store.isLoggedIn && store.isAtLeast(allowIf)) {\n    return (\n      <Route\n        {...rest}\n        render={(renderedProps) => <ComponentToRender {...renderedProps} />}\n      />\n    );\n  }\n\n  // somehow i think this is redundant...\n  if (isProtected === null) {\n    return (\n      <Route\n        {...rest}\n        render={(renderedProps) => <ComponentToRender {...renderedProps} />}\n      />\n    );\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => (\n        <Route\n          {...rest}\n          render={(renderedProps) => (\n            <ErrorPage {...renderedProps} status={403} message=\"Forbidden\" />\n          )}\n        />\n      )}\n    />\n  );\n}\nConnectedRoute.defaultProps = {\n  isProtected: null,\n  allowIf: \"other\",\n};\n// https://reactjs.org/docs/typechecking-with-proptypes.html\nConnectedRoute.propTypes = {\n  isProtected: ProptTypes.bool,\n  redirectIfAuthenticated: ProptTypes.bool,\n  component: ProptTypes.elementType.isRequired,\n  allowIf: ProptTypes.string,\n};\nexport default observer(ConnectedRoute);\n","import React, { useEffect } from \"react\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver } from \"mobx-react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./ListOfUsers.css\";\n\nexport const ListOfUsers = () => {\n  const store = useStore();\n\n  useEffect(() => {\n    store.fetchUserList();\n  }, []);\n\n  return useObserver(() => {\n    return store.userList.map((user) => {\n      return (\n        <div className=\"listOfUsers\" key={user._id}>\n          <Card className=\"newCard\" style={{ width: 18 + \"rem\" }}>\n            <img\n              className=\"card-img-top rounded zoom img-fluid\"\n              alt={\"User\"}\n              src={`${process.env.REACT_APP_API_URL}${user.picLocation}`}\n              style={{\n                width: 150 + \"px\",\n                minHeight: 20 + \"px\",\n                margin: 0 + \"auto\",\n              }}\n              onError={(e) => {\n                e.target.onError = null;\n                e.target.src =\n                  \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\";\n              }}\n            />\n            <Card.Title className=\"title\" style={{ marginLeft: \"5px\" }}>\n              <h6>{user.displayName}</h6>\n              <h6> School: {user.school}</h6>\n              <h6> Location: {user.location}</h6>\n            </Card.Title>\n          </Card>\n        </div>\n      );\n    });\n  });\n};\n\nexport default ListOfUsers;\n","import React, { Component } from \"react\";\nimport { Row, Col, Image, Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Home.css\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore } from \"mobx-react\";\nimport ListOfUsers from \"./ListOfUsers\";\nimport Container from \"react-bootstrap/Container\";\nimport onlinechat2 from \"../images/onlinechat2.png\";\nimport search from \"../images/search.jpg\";\n\nexport default function Home() {\n  const store = useStore();\n  return useObserver(() => (\n    <>\n      <div className=\"image\">\n        <Container style={{ padding: \"2px\" }}>\n          <Row>\n            <Col>\n              <Image\n                src={\n                  store.user.picLocation\n                    ? process.env.REACT_APP_API_URL + store.user.picLocation\n                    : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n                }\n                thumbnail\n              />\n              <>\n                <h3 style={{ color: \"white\" }}>\n                  {store.user.displayName ||\n                    \"Welcome!!! Go To Edit Profile & Add Your Info!\"}\n                </h3>\n                <h6 style={{ color: \"white\" }}> Bio: {store.user.about} </h6>\n                <h6 style={{ color: \"white\" }}> School: {store.user.school}</h6>\n                <h6 style={{ color: \"white\" }}>\n                  Location: {store.user.location}\n                </h6>\n              </>\n            </Col>\n            <Col>\n              <ListOfUsers />\n            </Col>\n            <Col>\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Img variant=\"top\" src={search} />\n                <Card.Body>\n                  <Card.Title>Checkout Our College Search!</Card.Title>\n                  <Card.Text>\n                    Search for colleges here and abroad. Get their information\n                    and then chat with a coach!!\n                  </Card.Text>\n                  <Button variant=\"primary\">\n                    <Link\n                      to=\"/collegesearch\"\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"white\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      College Search\n                    </Link>{\" \"}\n                  </Button>\n                </Card.Body>\n              </Card>\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Img variant=\"top\" src={onlinechat2} />\n                <Card.Body>\n                  <Card.Title>Online Recruiter Chat</Card.Title>\n                  <Card.Text>\n                    Once you find the perfect college, contact the recruiter\n                    right here using our recruiter chat\n                  </Card.Text>\n                  <Button variant=\"primary\">\n                    <Link\n                      to=\"/chat\"\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"white\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      Online Chat\n                    </Link>{\" \"}\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>{\" \"}\n    </>\n  ));\n}\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"./About.css\";\n\n//import { observable } from \"mobx\";\n//import { observer } from \"mobx\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div class=\"sport\">\n        <Row>\n          <Col>\n            <h1>ABOUT PAGE</h1>\n            <h3>Creators:</h3>\n            <ul>\n              <li>\n                <h5>Bethsheba Zebata</h5>\n              </li>\n              <li>\n                <h5>Sondos Issa</h5>\n              </li>\n              <li>\n                <h5>Stephanie Guirand</h5>\n              </li>\n              <li>\n                <h5>Morgan Farrell </h5>\n              </li>\n              <li>\n                <h5>Ralph Hernandezz</h5>\n              </li>\n              <li>\n                <h5>Jasmyne Ford</h5>\n              </li>\n            </ul>\n          </Col>\n          <Col>\n            <img\n              //style={{ padding: \"5px\" }}\n              alt=\"silhouette\"\n              src=\"https://image.freepik.com/free-vector/group-businesspeople-holding-raised-hands-happy-successful-team-black-silhouettes_48369-18388.jpg\"\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default About;\n//export default observer(About)\n","import React, { Component } from \"react\";\nimport \"./Contact.css\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"soccer\">\n        <h3>Get In Touch</h3>\n        <h4>Phone: 800-555-5555</h4>\n        <h4> Email: contactUs@everythingsports.com</h4>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore } from \"mobx-react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function DeleteUser() {\n  const store = useStore();\n\n  const handleDeleteUser = (e) => {\n    e.preventDefault();\n    const confirmed = window.confirm(\"DELETE WILL BE FINAL ...\");\n    if (confirmed) {\n      store.deleteUser();\n    }\n  };\n\n  return useObserver(() => (\n    <Button variant=\"outline-danger\" size=\"sm\" onClick={handleDeleteUser}>\n      DELETE PROFILE\n    </Button>\n  ));\n}\n","import React from \"react\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore, observer } from \"mobx-react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function UpdateUser() {\n  const store = useStore();\n  const state = useLocalStore(() => {\n    return {\n      displayName: store.user.displayName,\n      school: store.user.school,\n      location: store.user.location,\n      about: store.user.about,\n      update(key, value) {\n        state[key] = value;\n      },\n    };\n  });\n\n  const handleChangeDisplay = (e) => {\n    state.update(\"displayName\", e.target.value);\n  };\n  const handleChange = (e) => {\n    state.update(e.target.name, e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      await store.updateUser({\n        displayName: state.displayName,\n        school: state.school,\n        location: state.location,\n        about: state.about,\n      });\n    } catch (err) {\n      console.error(err);\n      state.setError(err.message);\n    }\n  };\n\n  return useObserver(() => (\n    <form\n      onSubmit={handleSubmit}\n      style={{\n        display: \"flex\",\n        // flexDirection: \"row\",\n        // float: \"right\",\n        flexWrap: \"wrap\",\n        width: \"250px\",\n        border: \"1px\",\n      }}\n    >\n      <Card.Title\n        style={{ fontSize: \"16px\", paddingTop: \"10px\", color: \"white\" }}\n      >\n        Edit School:\n      </Card.Title>\n      <input\n        style={{\n          borderColor: \"purple\",\n          display: \"block\",\n          width: \"400px\",\n          height: \"50px\",\n        }}\n        name=\"school\"\n        type=\"text\"\n        placeholder=\"text here\"\n        autoFocus\n        required\n        value={state.school}\n        onChange={handleChange}\n      />\n      <Card.Title\n        style={{ fontSize: \"16px\", paddingTop: \"10px\", color: \"white\" }}\n      >\n        Edit Location:\n      </Card.Title>\n      <input\n        style={{\n          display: \"block\",\n          width: \"400px\",\n          height: \"50px\",\n          borderColor: \"purple\",\n        }}\n        name=\"location\"\n        type=\"text\"\n        placeholder=\"text here\"\n        required\n        value={state.location}\n        onChange={handleChange}\n      />\n      <Card.Title\n        style={{ paddingTop: \"10px\", fontSize: \"16px\", color: \"white\" }}\n      >\n        Edit Display Name:\n      </Card.Title>\n      <Card.Text>\n        <input\n          style={{\n            borderColor: \"purple\",\n            display: \"block\",\n            width: \"400px\",\n            height: \"50px\",\n            wrap: \"soft\",\n            overflow: \"hidden\",\n          }}\n          size=\"lg\"\n          name=\"displayName\"\n          type=\"text\"\n          placeholder=\"text here\"\n          required\n          // wrap=\"soft\"\n          // maxlength=\"40\"\n          //style=\"overflow:hidden\"\n          value={state.displayName}\n          onChange={handleChange}\n        />\n        <br />\n        <Card.Title style={{ fontSize: \"16px\", color: \"white\" }}>\n          Edit Bio:\n        </Card.Title>\n        <textarea\n          // <input\n          style={{\n            borderRadius: \"0\",\n            borderColor: \"purple\",\n            paddingBottom: \"10px\",\n            display: \"block\",\n            width: \"400px\",\n            height: \"100px\",\n          }}\n          size=\"sm\"\n          squared=\"true\"\n          name=\"about\"\n          type=\"text\"\n          placeholder=\"text here\"\n          required\n          value={state.about}\n          onChange={handleChange}\n        />\n        <br />\n        <Button\n          //outline\n          variant=\"primary\"\n          //size=\"btn btn-secondary btn-sm\" //  \"sm\"\n          type=\"submit\"\n          value=\"submit\"\n          onSubmit={handleSubmit}\n        >\n          Save\n        </Button>\n      </Card.Text>\n    </form>\n  ));\n}\n","import React from \"react\";\n//import mongoose from \"mongoose\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore } from \"mobx-react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function UploadImg() {\n  const store = useStore();\n  const state = useLocalStore(() => {\n    return {\n      selectedFile: null,\n      updateSelectedFile(file) {\n        state.selectedFile = file;\n      },\n    };\n  });\n  const handleChange = (e) => {\n    state.updateSelectedFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await store.uploadPic(state.selectedFile);\n  };\n\n  return useObserver(() => (\n    <Card onSubmit={handleSubmit} style={{ display: \"flex\" }}>\n      {/* <div> */}\n      <input\n        onChange={handleChange}\n        style={{ borderRadius: \"0\", paddingTop: \"10px\" }}\n        squared=\"true\"\n        size=\"sm\"\n        type=\"file\"\n        id=\"picture\"\n        name=\"picture\"\n        accept=\"image/png, image/jpeg, image/gif\"\n      />\n      <Button\n        onClick={handleSubmit}\n        squared=\"true\"\n        theme=\"primary\"\n        size=\"sm\"\n        type=\"submit\"\n        value=\"Upload-Pic\"\n      >\n        Upload\n      </Button>\n      {/* </div> */}\n    </Card>\n  ));\n}\n","//import React, { Component } from \"react\";\nimport UploadImg from \"./UploadImg\";\n//import DeleteUser from \"./DeleteUser\";\nimport UpdateUser from \"./UpdateUser\";\nimport React, { useEffect } from \"react\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore } from \"mobx-react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function ProfileCard() {\n  const store = useStore();\n\n  console.log(store);\n  return useObserver(() => (\n    <Card\n      style={{\n        Width: \"100px\",\n        backgroundColor: \" #1f9bea\",\n        border: \"1px solid\",\n      }}\n    >\n      <Card.Img\n        style={{\n          Width: \"100\",\n          padding: \"47px\",\n          border: \"1px solid\",\n          color: \"#5EA1A6\",\n          backgroundColor: \" #1f9bea\",\n        }}\n        className=\"cardImg\"\n        variant=\"top\"\n        src={\n          store.user.picLocation\n            ? process.env.REACT_APP_API_URL + store.user.picLocation\n            : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n        }\n      />\n      <UploadImg />\n      <Card.Title className=\"title\" style={{ marginLeft: \"5px\" }}>\n        <h1 style={{ color: \"white\" }}>{store.user.displayName}</h1>\n      </Card.Title>\n      <div className=\"bio\" style={{ marginLeft: \"6px\" }}>\n        <h4 style={{ color: \"white\" }}>Bio:</h4>{\" \"}\n        <h6 style={{ color: \"white\" }}>\n          {store.user.about || \"Please...Tell Us About You! :)\"}\n        </h6>\n        <br />\n        <br />\n        {/* <br /> */}\n        <div className=\"school\" style={{ marginLeft: \"4px\" }}>\n          <h4 style={{ color: \"white\" }}>School:</h4>{\" \"}\n          <h6 style={{ color: \"white\" }}>{store.user.school}</h6>\n        </div>\n        <br />\n        <div className=\"location\" style={{ marginLeft: \"4px\" }}>\n          <h4 style={{ color: \"white\" }}>Location:</h4>{\" \"}\n          <h6 style={{ color: \"white\" }}>{store.user.location}</h6>\n        </div>\n        <br />\n      </div>\n    </Card>\n  ));\n}\n","import React from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport DeleteUser from \"./DeleteUser\";\nimport UpdateUser from \"./UpdateUser\";\nimport ProfileCard from \"./ProfileCard\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./Profile.css\";\n\nexport default function Profile() {\n  return useObserver(() => (\n    <Row>\n      <Col>\n        <div style={{ padding: \"0px\", marginLeft: \"0px\" }}>\n          <img\n            style={{\n              padding: \"0px\",\n              width: \"1200px\",\n              height: \"1700px\",\n              //marginRight: \"1000px\",\n            }}\n            alt=\"basketball picture\"\n            src=\"https://www.ncronline.org/sites/default/files/styles/article_full_width/public/web%20markus-spiske-1269203-unsplash.jpg?itok=lWd1zVUF\"\n          />\n        </div>\n      </Col>\n      <Col>\n        <div style={{ marginLeft: \"202px\" }}>\n          <ProfileCard />\n          <UpdateUser />\n          <DeleteUser />\n        </div>\n      </Col>\n    </Row>\n  ));\n}\n","import React from \"react\";\nimport { useStore } from \"../store/useStore\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\n\nimport { useObserver } from \"mobx-react\";\nimport { useHistory } from \"react-router-dom\";\nconst Logout = () => {\n  const store = useStore();\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    await store.logout();\n    history.push(\"/\");\n  };\n  return useObserver(\n    () =>\n      store.isLoggedIn && (\n        <Button\n          onClick={handleLogout}\n          variant=\"primary\"\n          size=\"1g\"\n          style={{ marginLeft: \"0%\", backgroundColor: \"#29303D\", size: \"px\" }}\n        >\n          Logout\n        </Button>\n      )\n  );\n};\nexport default Logout;\n\n// const Logout = () => {\n//   const store = useStore();\n//   return useObserver(() => store.isLoggedIn && <button onClick={() => store.logout()}>Logout</button>);\n// };\n// export default Logout;\n","import React, { Component } from \"react\";\nimport { Row, Col, Image, Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Home.css\";\nimport { useStore } from \"../store/useStore\";\nimport { useObserver, useLocalStore } from \"mobx-react\";\nimport ListOfUsers from \"./ListOfUsers\";\nimport Container from \"react-bootstrap/Container\";\nimport onlinechat2 from \"../images/onlinechat2.png\";\nimport search from \"../images/search.jpg\";\nimport RecView from \"./RecView.css\";\n\nexport default function Home() {\n  const store = useStore();\n  return useObserver(() => (\n    <>\n      <div className=\"image\">\n        <Container style={{ padding: \"2px\" }}>\n          <Row>\n            <Col>\n              <Image\n                src={\n                  store.user.picLocation\n                    ? process.env.REACT_APP_API_URL + store.user.picLocation\n                    : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n                }\n                thumbnail\n              />\n              <>\n                <h3 style={{ color: \"white\" }}>\n                  {store.user.displayName ||\n                    \"Welcome!!! Go To Edit Profile & Add Your Info!\"}\n                </h3>\n                <h6 style={{ color: \"white\" }}> Bio: {store.user.about} </h6>\n                <h6 style={{ color: \"white\" }}> School: {store.user.school}</h6>\n                <h6 style={{ color: \"white\" }}>\n                  Location: {store.user.location}\n                </h6>\n              </>\n            </Col>\n            <Col>\n              <ListOfUsers />\n            </Col>\n            <Col>\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Img variant=\"top\" src={search} />\n                <Card.Body>\n                  <Card.Title>Checkout Our College Search!</Card.Title>\n                  <Card.Text>\n                    Search for colleges here and abroad. Get their information\n                    and then chat with a coach!!\n                  </Card.Text>\n                  <Button variant=\"primary\">\n                    <Link\n                      to=\"/collegesearch\"\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"white\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      College Search\n                    </Link>{\" \"}\n                  </Button>\n                </Card.Body>\n              </Card>\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Img variant=\"top\" src={onlinechat2} />\n                <Card.Body>\n                  <Card.Title>Online Recruiter Chat</Card.Title>\n                  <Card.Text>\n                    Once you find the perfect college, contact the recruiter\n                    right here using our recruiter chat\n                  </Card.Text>\n                  <Button variant=\"primary\">\n                    <Link\n                      to=\"/chat\"\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"white\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      Online Chat\n                    </Link>{\" \"}\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>{\" \"}\n    </>\n  ));\n}\n","import React, { useEffect, useState } from \"react\";\n// import { First } from \"react-bootstrap/esm/PageItem\";\nimport axios from \"axios\";\nimport { useDebounce } from \"use-debounce\";\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport './CollegeSearch.css'\n\nfunction getColleges(text, token) {\n  return axios\n    .get(`http://universities.hipolabs.com/search?name=${text}`, {\n      cancelToken: token,\n    })\n    .then(({ data }) => data);\n}\nconst URL = `http://universities.hipolabs.com/search?name=`;\n\nconst CollegeSearch = () => {\n  const [text, setText] = useState(\"\");\n  const [colleges, setColleges] = useState([]);\n  const [debouncedText] = useDebounce(text, 500);\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    if (debouncedText) {\n      getColleges(\n        debouncedText,\n        source.token\n      )(setColleges).catch((e) => {\n        if (axios.isCancel(source)) {\n          return;\n        }\n        setColleges([]);\n      });\n    } else {\n      setColleges([]);\n    }\n    return () => {\n      source.cancel(\n        \"Canceled because of component unmounted or debounce Text changed\"\n      );\n    };\n  }, [debouncedText]);\n\n  console.log(colleges);\n  return (\n    <>\n    {/* <div className='college'> */}\n    <div className='search'>\n      <Card >\n      <h2>College Search</h2>\n      <label>\n        Enter a college name below\n        <br></br>\n        <input\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          type=\"text\"\n          name=\"college\"\n          placeholder=\"Enter College Here\"\n        />\n      </label>\n      </Card>\n      \n      {/* <input type=\"submit\" value=\"Search\" /> */}\n      <Button variant = 'primary'>Search</Button>\n      <Card>\n      <ol>\n        {colleges.map((colleges) => (\n          <li>\n            {colleges.name}\n            <br></br>\n            {colleges.country}\n            <br></br>\n            {colleges.alpha_two_code}\n            <br></br>\n            {colleges.web_pages}\n          </li>\n        ))}\n        {/* {colleges.map(colleges => <li>{colleges.domain}</li>)} */}\n      </ol>\n      </Card>\n      {/* </div> */}\n    </div>\n\n    </>\n  );\n};\nexport default CollegeSearch;\n","import React from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useStore } from \"../../store/useStore\";\n\nconst ChatMessage = ({ message }) =>\n  useObserver(\n    () => (\n      <>\n        <li>\n          <li>{message.text}</li>\n          <span>{message.createdAt}</span>\n        </li>\n        <span>{message.displayName}</span>\n      </>\n    ),\n    []\n  );\n\nconst ChatMessages = () => {\n  const store = useStore();\n  return useObserver(\n    () => (\n      <ul>\n        {store.chatStore.messages.map((message) => (\n          <ChatMessage key={message._id} message={message} />\n        ))}\n      </ul>\n    ),\n    []\n  );\n};\n\nexport default ChatMessages;\n","import React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useStore } from \"../../store/useStore\";\nimport Chat from \"./Chat.css\";\n\nconst ThreadList = () => {\n  const store = useStore();\n  useEffect(() => {\n    store.chatStore.getThreads();\n  }, []);\n  return useObserver(\n    () => (\n      <ul>\n        {store.chatStore.threads.map((thread) => (\n          <li\n            key={thread._id}\n            onClick={() => store.chatStore.changeThread(thread)}\n          >\n            {thread.threadName}\n          </li>\n        ))}\n      </ul>\n    ),\n    []\n  );\n};\n\nexport default ThreadList;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { useStore } from \"../../store/useStore\";\nimport onlinechat from \"../../images/onlinechat.JPG\";\n\nconst filterColors = (inputValue) => {\n  return colourOptions.filter((i) =>\n    i.label.toLowerCase().includes(inputValue.toLowerCase())\n  );\n};\n\nconst UserSelect = () => {\n  const store = useStore();\n  const [inputVal, setInputVal] = useState(\"\");\n  const selectRef = useRef(null);\n  useEffect(() => {\n    store.fetchUserList();\n  }, []);\n  const handleInputChange = (val) => {\n    const inputValue = val.replace(/\\W/g, \"\");\n    return inputValue;\n  };\n  return useObserver(() => (\n    <>\n      <Card>\n        <img\n          width={415}\n          height={200}\n          className=\"mr-3\"\n          src={onlinechat}\n          alt=\"Generic placeholder\"\n        />\n\n        <Card.Header>\n          Choose a User from the Dropdown, then Click Start Thread\n        </Card.Header>\n        <Card.Body>\n          <Select\n            ref={selectRef}\n            onInputChange={handleInputChange}\n            options={store.userListLabels}\n          />\n          <br />\n          <Button\n            type=\"button\"\n            class=\"btn btn-outline-danger btn-sm\"\n            onClick={() => store.chatStore.startThread(selectRef.current)}\n          >\n            Start Thread\n          </Button>\n        </Card.Body>\n      </Card>\n    </>\n  ));\n};\n\nexport default UserSelect;\n","import React, { useRef, useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useStore } from \"../../store/useStore\";\nimport Chat from \"./Chat.css\";\n\nconst ChatInput = () => {\n  const store = useStore();\n  const [err, setError] = useState(\"err\");\n  const messageRef = useRef(null);\n\n  const sendMessage = async (e) => {\n    try {\n      e.preventDefault();\n      setError(\"\");\n      await store.chatStore.postMessage(messageRef.current.value);\n      messageRef.current.value = \"\";\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return useObserver(\n    () => (\n      <form onSubmit={sendMessage}>\n        <input type=\"text\" placeholder=\"Send a message...\" ref={messageRef} />\n      </form>\n    ),\n    []\n  );\n};\n\nexport default ChatInput;\n","import React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\nimport ChatMessages from \"./ChatMessages\";\nimport ThreadList from \"./ThreadList\";\nimport UserSelect from \"./UserSelect\";\nimport ChatInput from \"./ChatInput\";\nimport { useStore } from \"../../store/useStore\";\n\nconst Chat = () => {\n  const store = useStore();\n  useEffect(() => {\n    // poll when mounting\n    store.chatStore.startPolling();\n    return () => {\n      // stop polling on unmount\n      store.chatStore.stopPolling();\n    };\n  }, []);\n  return useObserver(() => (\n    <div>\n      <h2>Chat with a Player or Recruiter! </h2>\n\n      <Container fluid>\n        <Row>\n          <Col>\n            <UserSelect />\n            <ThreadList />\n          </Col>\n          <Col>\n            <Card>\n              <Card.Header>Chat Window</Card.Header>\n              <Card.Body>\n                <Row>\n                  <ChatMessages />\n                </Row>\n                <Row>\n                  <ChatInput />\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  ));\n};\n\nexport default Chat;\n","import React, { Component, PropTypes } from \"react\";\nimport FormInput from \"./FormInput\";\n// import LoginStore from \"../store/LoginStore\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { observer, useLocalStore, useObserver } from \"mobx-react\";\nimport { useStore } from \"../store/useStore\";\n\nconst LoginForm = () => {\n  const store = useStore();\n\n  const state = useLocalStore(() => {\n    return {\n      email: \"\",\n      password: \"\",\n      updateEmail(email) {\n        state.email = email;\n      },\n      updatePassword(pass) {\n        state.password = pass;\n      },\n    };\n  });\n\n  const submitForm = async (e) => {\n    try {\n      e.preventDefault();\n      await store.login({ email: state.email, password: state.password });\n    } catch (err) {\n      console.log(err);\n\n      state.setError(err.message);\n    }\n  };\n\n  // if (res.status === 500) {\n  //   return useObserver(() => <h3>Wrong Password</h3>);\n  // }\n\n  return useObserver(\n    () => (\n      <form id=\"login-form\" onSubmit={submitForm}>\n        <h3>\n          Welcome Back!\n          <br></br>\n          LOGIN\n        </h3>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={state.email}\n          placeholder=\"email\"\n          onChange={(e) => state.updateEmail(e.target.value)}\n        />\n        <br />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          value={state.password}\n          placeholder=\"password\"\n          onChange={(e) => state.updatePassword(e.target.value)}\n        />\n        <br />\n        {/* <button type=\"submit\">Login</button> */}\n        <Button\n          className=\"button1\"\n          type=\"submit\"\n          variant=\"primary\"\n          size=\"1g\"\n          style={{\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            backgroundColor: \"#FCCA03\",\n            size: \"px\",\n          }}\n        >\n          Login\n        </Button>{\" \"}\n        <br />\n        {/* <input value=\"Continue\" type=\"submit\" /> */}\n      </form>\n      //<Link to=\"/signup\">\n      //<>\n      //<Button variant=\"primary\" size=\"1g\" style={{ marginLeft: \"5%\", backgroundColor: \"gray\", size: \"px\" }}>\n      //  SIGN UP\n      // </Button>{\" \"}\n      // </>\n      // </Link>\n    ),\n    []\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport FormInput from \"./FormInput\";\nimport \"./Register.css\";\n\nimport { Container, Button, Row, Col, Form } from \"react-bootstrap\";\n\nimport { useLocalStore, useObserver } from \"mobx-react\";\nimport { useStore } from \"../store/useStore\";\nconst Register = () => {\n  const store = useStore();\n\n  const state = useLocalStore(() => {\n    return {\n      email: \"\",\n      password: \"\",\n      role: \"other\",\n      updateEmail(email) {\n        state.email = email;\n      },\n      updatePassword(pass) {\n        state.password = pass;\n      },\n      updateRole(role) {\n        state.role = role;\n      },\n    };\n  });\n\n  const submitForm = async (e) => {\n    try {\n      e.preventDefault();\n      await store.registerUser({\n        email: state.email,\n        password: state.password,\n        role: state.role,\n      });\n    } catch (err) {\n      console.error(err);\n      //\n      state.setError(err.message);\n    }\n  };\n\n  return useObserver(\n    () => (\n      <form id=\"Register-form\" onSubmit={submitForm}>\n        <h3>\n          New User?\n          <br></br>\n          REGISTER HERE\n        </h3>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={state.email}\n          placeholder=\"email\"\n          onChange={(e) => state.updateEmail(e.target.value)}\n        />\n        <br />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          value={state.password}\n          placeholder=\"password\"\n          onChange={(e) => state.updatePassword(e.target.value)}\n        />\n        <br />\n        <Form.Group controlId=\"register.role\">\n          <Form.Label>Are you a student or recruiter?</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={state.role}\n            onChange={(e) => state.updateRole(e.target.value)}\n          >\n            <option value=\"other\">Other</option>\n            <option value=\"student\">Student</option>\n            <option value=\"recruiter\">Recruiter</option>\n          </Form.Control>\n        </Form.Group>\n        {/* <button type=\"submit\">Register</button> */}\n        <Button\n          className=\"button2\"\n          type=\"submit\"\n          variant=\"primary\"\n          size=\"1g\"\n          style={{\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            backgroundColor: \"#FCCA03\",\n            size: \"px\",\n          }}\n        >\n          Register\n        </Button>{\" \"}\n        <br />\n        {/* <input value=\"Continue\" type=\"submit\" /> */}\n      </form>\n      //<Link to=\"/signup\">\n      //<>\n      //<Button variant=\"primary\" size=\"1g\" style={{ marginLeft: \"5%\", backgroundColor: \"gray\", size: \"px\" }}>\n      //  SIGN UP\n      // </Button>{\" \"}\n      // </>\n      // </Link>\n    ),\n    []\n  );\n};\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport { Container } from \"react-bootstrap\";\nimport Register from \"./Register\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  render() {\n    return (\n      <div id=\"login\">\n        <h2>EverythingSports </h2>\n        <p>The Facebook of Sports.</p>\n\n        <LoginForm />\n        <Register />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n","import React from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useStore } from \"../store/useStore\";\n\nconst Restrictor = ({ children, role }) => {\n  if (!role && !auth) {\n    throw new Error(\"Allow if is require when using a restrictor\");\n  }\n  const store = useStore();\n  return useObserver(() => {\n    return store.isAtLeast(role) && children;\n  });\n};\n\nexport default Restrictor;\n","import React, { Component } from \"react\";\nimport { NavLink, BrowserRouter } from \"react-router-dom\";\nimport { Switch } from \"react-router\";\nimport { useObserver } from \"mobx-react\";\nimport ConnectedRoute from \"./components/ConnectedRoute\";\nimport Home from \"./components/Home\";\n//import Blog from \"./components/Blog\";\nimport About from \"./components/About\";\n//import Message from \"./components/Message\";\nimport Contact from \"./components/Contact\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport RecView from \"./components/RecView\";\nimport CollegeSearch from \"./components/CollegeSearch\";\nimport Errorpage from \"./components/Errorpage\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport logo from \"./images/eslogo.png\";\nimport { useStore } from \"./store/useStore\";\nimport Restrictor from \"./components/Restrictor\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbo from \"react-bootstrap/Jumbotron\";\nimport { size } from \"lodash\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst Nav = () => {\n  const store = useStore();\n  return useObserver(() => {\n    if (store.isLoading) {\n      return null;\n    }\n    return (\n      <BrowserRouter>\n        <Jumbo\n          className=\"jumbo\"\n          style={{\n            padding: \"0px\",\n            height: \"125px\",\n            backgroundSize: \"cover\",\n            backgroundColor: \"white\",\n            marginRight: \"0px\",\n\n            // marginLeft: \"2px\",\n          }}\n        >\n          <Container\n            className=\"inContainer\"\n            style={{\n              marginLeft: \"0px\",\n              marginRight: \"0px\",\n              padding: \"0px\",\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"EverythingSports Logo\"\n              width=\"345\"\n              height=\"125\"\n            />\n            <img\n              width=\"340\"\n              height=\"125\"\n              src=\"https://previews.123rf.com/images/kunchit123/kunchit1231802/kunchit123180200081/96473981-basketball-red-blue-yellow-isolated-on-white-background-.jpg\"\n            />\n            <img\n              width=\"130\"\n              height=\"120\"\n              src=\"https://www.omegasports.com/prodimages/7398-DEFAULT-l.jpg\"\n            />\n            <img\n              width=\"80\"\n              height=\"110\"\n              src=\"https://images-na.ssl-images-amazon.com/images/I/81U84dNaCcL._AC_SL1500_.jpg\"\n            />\n            <img\n              width=\"123\"\n              height=\"125\"\n              src=\"https://www.ansaldideportes.cl/wp-content/uploads/2016/04/Balon_esponja_poliuretano_futbol_8_amarillo-azul_SOLAR_deportes.jpg\"\n            />\n            <img\n              width=\"122\"\n              height=\"120\"\n              src=\"https://4.imimg.com/data4/EI/YG/MY-20347603/volleyball-250x250.jpg\"\n            />\n          </Container>\n        </Jumbo>\n        <div>\n          <ul className=\"header\">\n            {!store.isLoggedIn && (\n              <li>\n                <NavLink exact to=\"/\">\n                  Login\n                </NavLink>{\" \"}\n              </li>\n            )}\n            <Restrictor role=\"other\">\n              <li>\n                <NavLink exact to=\"/home\">\n                  Home\n                </NavLink>{\" \"}\n              </li>\n            </Restrictor>\n            <Restrictor role=\"other\">\n              <li>\n                <NavLink exact to=\"/profile\">\n                  Edit Profile\n                </NavLink>{\" \"}\n              </li>\n            </Restrictor>\n            {/* <Restrictor role=\"other\">\n              <li>\n                <NavLink to=\"/message\">Messages</NavLink>\n              </li>\n            </Restrictor> */}\n            <Restrictor role=\"recruiter\">\n              <li>\n                <NavLink to=\"/recview\">Recruiter View</NavLink>\n              </li>\n            </Restrictor>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n            {/* <Restrictor role=\"other\">\n              <li>\n                <NavLink to=\"/blog\">Blog</NavLink>\n              </li>\n            </Restrictor> */}\n            <li>\n              <NavLink to=\"/contact\">Contact</NavLink>\n            </li>\n            <Restrictor role=\"other\">\n              <li>\n                <NavLink to=\"/collegesearch\">College Search</NavLink>\n              </li>\n            </Restrictor>\n            <Restrictor role=\"sturdent\">\n              <li>\n                <NavLink to=\"/chat\">Chat</NavLink>\n              </li>\n            </Restrictor>\n            <li>\n              <Logout />\n            </li>\n          </ul>\n          <Container style={{ padding: \"2px\" }}>\n            <Switch>\n              <ConnectedRoute\n                exact\n                redirectIfAuthenticated\n                path=\"/\"\n                component={Login}\n              />\n              <ConnectedRoute exact isProtected path=\"/home\" component={Home} />\n\n              <ConnectedRoute exact path=\"/contact\" component={Contact} />\n              <ConnectedRoute\n                exact\n                isProtected\n                path=\"/profile\"\n                component={Profile}\n              />\n              {/* <ConnectedRoute\n                exact\n                isProtected\n                path=\"/message\"\n                component={Message}\n              /> */}\n              <ConnectedRoute exact path=\"/about\" component={About} />\n              <ConnectedRoute\n                exact\n                allowIf={\"recruiter\"}\n                isProtected\n                path=\"/recview\"\n                component={RecView}\n              />\n              <ConnectedRoute\n                exact\n                isProtected\n                path=\"/collegesearch\"\n                component={CollegeSearch}\n              />\n              <ConnectedRoute exact isProtected path=\"/chat\" component={Chat} />\n              <ConnectedRoute component={Errorpage} />\n            </Switch>\n          </Container>\n        </div>\n      </BrowserRouter>\n    );\n  });\n};\nexport default Nav;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"mobx-react/batchingForReactDom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { StoreProvider } from \"./store/useStore\";\nimport Nav from \"./Nav\";\n//import Message from './components/Message';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <StoreProvider>\n    <Nav />\n  </StoreProvider>,\n  document.getElementById(\"app\"),\n);\nif (module.hot) {\n  // enables hot module replacement if plugin is installed\n  module.hot.accept();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/onlinechat2.a0ced209.png\";","module.exports = __webpack_public_path__ + \"static/media/search.77976284.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Alienpic.00b768a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/onlinechat.8037578f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/eslogo.f5d571af.png\";"],"sourceRoot":""}